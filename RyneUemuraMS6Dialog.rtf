{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /Users/uemurar51/sql4300/cmake-build-debug/sql4300 /Users/uemurar51/cpsc4300env/data\
(sql4300: running with database environment at /Users/uemurar51/cpsc4300env/data)\
SQL> test\
test_heap_storage: test_heap_storage: \
create ok\
drop ok\
create_if_not_exsts ok\
insert ok\
select/project ok 1\
many inserts/select/projects ok\
del ok\
ok\
test_btree: table create good\
create good\
insert good\
lookup good\
drop good\
ok\
SQL> create table foo (id int, data text)\
CREATE TABLE foo (id INT, data TEXT)\
created foo\
SQL> insert into foo values (1, "one"); insert into foo values(2, "two"); insert into foo values (2, "another two")\
INSERT INTO foo VALUES (1, "one")\
successfully inserted 1 row into foo\
INSERT INTO foo VALUES (2, "two")\
successfully inserted 1 row into foo\
INSERT INTO foo VALUES (2, "another two")\
successfully inserted 1 row into foo\
SQL> select * from foo\
SELECT * FROM foo\
id data \
+----------+----------+\
1 "one" \
2 "two" \
2 "another two" \
successfully returned 3 rows\
SQL> create index fxx on foo(id)\
CREATE INDEX fxx ON foo USING BTREE (id)\
Error: DbRelationError: Duplicate keys are not allowed in unique index\
SQL> show index from foo\
SHOW INDEX FROM foo\
table_name index_name column_name seq_in_index index_type is_unique \
+----------+----------+----------+----------+----------+----------+\
successfully returned 0 rows\
SQL> delete from foo where data = "two"\
DELETE FROM foo WHERE data = "two"\
successfully deleted 1 rows from foo\
SQL> select * from foo\
SELECT * FROM foo\
id data \
+----------+----------+\
1 "one" \
2 "another two" \
successfully returned 2 rows\
SQL> create index fxx on foo (id)\
CREATE INDEX fxx ON foo USING BTREE (id)\
created index fxx\
SQL> show index from foo\
SHOW INDEX FROM foo\
table_name index_name column_name seq_in_index index_type is_unique \
+----------+----------+----------+----------+----------+----------+\
"foo" "fxx" "id" 1 "BTREE" true \
successfully returned 1 rows\
SQL> insert into foo values (4, "four")\
INSERT INTO foo VALUES (4, "four")\
successfully inserted 1 row into foo and 1 indices\
SQL> select * from foo\
SELECT * FROM foo\
id data \
+----------+----------+\
1 "one" \
2 "another two" \
4 "four" \
successfully returned 3 rows\
SQL> quit}